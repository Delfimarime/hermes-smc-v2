spring:
  application:
    name: ${HERMES_SERVER_NAME:hermes-smsc-svc}
  boot:
    admin:
      client:
        enabled: ${HERMES_SERVER_SPRING_BOOT_CLIENT_ENABLED:false}
        instance:
          name: ${HERMES_SERVER_NAME:hermes-smsc-svc}
        url: ${HERMES_SERVER_SPRING_BOOT_CLIENT_URL:http://localhost:3000}
    hermes:
      listen-to:
        type: AWS_SQS
        queue: send-sms-queue
      publish-to:
        type: AWS_SQS
        received-sms-channel:
          queue: received-sms-queue
        unsupported-pdu-channel:
          queue: unsupported-pdu-queue
        delivery-receipt-channel:
          queue: delivery-receipt-queue
      services:
        DEFAULT:
          port: 2775
          hostname: localhost
          username: transmitter
          password: admin
          system-id: transmitter
          smpp-connection-type: TRANSMITTER
          verify-tls: false
        MTN:
          port: 2775
          hostname: localhost
          username: receiver
          password: admin
          system-id: receiver
          smpp-connection-type: RECEIVER
          verify-tls: false
      rules-datasource:
        type: s3
        bucket: hermes
        key: rules.json
  cloud:
    discovery:
      enabled: ${HERMES_SERVER_SPRING_CLOUD_DISCOVERY_ENABLED:false}
server:
  port: ${HERMES_SERVER_PORT:8080}
eureka:
  client:
    service-url:
      default-Zone: ${HERMES_SERVER_EUREKA_CLIENT_SERVICE_URL:http://localhost:8761/eureka/}
camel:
  debug:
    logging-level: ${HERMES_SERVER_LOG_LEVEL:INFO}
management:
  health:
    rabbit:
      enabled: false
    redis:
      enabled: false
logging:
  level:
    root: ${HERMES_SERVER_LOG_LEVEL:INFO}